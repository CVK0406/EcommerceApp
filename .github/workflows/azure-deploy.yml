name: Build and Deploy to Staging Slot (Blue/Green)

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'        # Any file under the src directory
      - 'pom.xml'       # Changes to your Maven build file
      - '.github/workflows/**' # Also trigger on workflow changes
  pull_request: # Build on PRs to main if code changes, but don't deploy
    branches: [ main ]
    paths:
      - 'src/**'
      - 'pom.xml'
      - '.github/workflows/**'

env:
  AZURE_WEBAPP_NAME: cvk-ecommerce-app
  AZURE_STAGING_SLOT_NAME: staging # Define the name of your staging slot
  AZURE_WEBAPP_PACKAGE_PATH: 'target/EcommerceApp.war' # Assumes finalName in pom.xml is EcommerceApp
  JAVA_VERSION: '8'
  RESOURCE_GROUP: 'ecommerce-rg'

jobs:
  build-and-deploy-to-staging: # Job name updated for clarity
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin' 
        cache: 'maven'

    - name: Build with Maven (Skipping Tests)
      run: mvn clean package -B -DskipTests

    # Deployment steps - only run for pushes to the main branch
    - name: Login to Azure
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: azure/login@v1 
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # Ensure this SP has permissions for slot deployment

    - name: Deploy to Azure Web App Staging Slot
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: ${{ env.AZURE_STAGING_SLOT_NAME }} # Deploy to the staging slot
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}

    - name: Swap Staging Slot to Production
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' # And previous steps succeeded
      run: |
        echo "Attempting to swap slot '${{ env.AZURE_STAGING_SLOT_NAME }}' to production for webapp '${{ env.AZURE_WEBAPP_NAME }}'..."
        az webapp deployment slot swap \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --slot ${{ env.AZURE_STAGING_SLOT_NAME }} \
          --target-slot production # 'production' is the keyword for the main slot
        echo "Swap initiated."